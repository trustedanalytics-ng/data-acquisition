server:
  port: 9997
topic:
  topics:
    toRequestsParser: toRequestsParser
    toDownloader: toDownloader
    toMetadataParser: toMetadataParser
kafka:
  clusterType: distributed
  producer:
    serializer.class: kafka.serializer.StringEncoder
    key.serializer.class: kafka.serializer.StringEncoder
    metadata.broker.list: ${kafka.uri}
    retry.backoff.ms: 500

  consumer:  
    group.id: default_group
    auto.commit.interval.ms: 1000
    auto.offset.reset: smallest 
    #watch for chroot (kafka)
    #TODO: add /kafka path on shifting from mock to a real CDH
    zookeeper.connect: "${zookeeper.uri}"
    zookeeper.chroot: kafka
    zookeeper.session.timeout.ms: 400
    zookeeper.sync.time.ms: 200

services:
  downloader: "${downloader.host:http://localhost:8090}"
  metadataparser: "${metadataparser.host:http://localhost:8900}"
  user-management: "${user.management.host:http://localhost:9998}"
  
spring.profiles.active: inmemory,local

callback:
  url: "http://${dataacquisition.host:localhost:8080}/rest/das/callbacks/{app}/{requestId}"

security:
  ignored: /open,/v2/api-docs,/api-docs/default/*,/images/*,/lib/*,/css/*

spring.oauth2.resource:
  id: cloud_controller
  jwt:
    keyUri: ${sso.tokenKey}

logging:
  level:
    org.springframework: INFO
    org.trustedanalytics: INFO
    kafka: INFO

cf:
  resource: ${sso.apiEndpoint}
  uaa: ${sso.uaaUri}

endpoints.enabled: false
endpoints.health.enabled: true
